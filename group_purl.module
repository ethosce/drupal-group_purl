<?php

/**
 * @file
 * Contains group_purl.module
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Site\Settings;

/**
 * Implements hook_entity_insert().
 *
 * Add entities created in a group context to the group automatically.
 *
 * @param EntityInterface $entity
 */
function group_purl_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {
  if (Drupal::routeMatch()->getRouteName() != 'entity.group_content.create_form') {
    if ($entity->getEntityTypeId() == "node") {
      $context = Drupal::service('group_purl.context_provider');
      $contexts = $context->getRuntimeContexts(['group']);
      if (!empty($contexts['group'])) {
        $group = $contexts['group']->getContextValue();
        $etype = $entity->getType();
        if ($group->getGroupType()->hasContentPlugin('group_node:' . $etype)) {
          $group->addContent($entity, 'group_node:' . $etype);
        }
      }
    }
  }
}

/**
 * Implements hook_link_alter().
 */
function group_purl_link_alter(&$variables) {
  /** @var \Drupal\Core\Url $url */
  $options = &$variables['options'];
  if (isset($options['purl_context']) && !$options['absolute']) {
    $linkhost = isset($options['purl_context']['modifier'])
      ? $options['purl_context']['modifier'] . '.' . Settings::get('purl_base_domain')
      : Settings::get('purl_base_domain');
    $host = Drupal::service('router.request_context')->getHost();
    if ($linkhost != $host) {
      $options['host'] = $linkhost;
      $options['absolute'] = TRUE;
    }

  }

}
